<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:controls="clr-namespace:HEFrame.Styles.Controls" xmlns:sys="http://schemas.microsoft.com/netfx/2009/xaml/presentation" xmlns:system="clr-namespace:System;assembly=mscorlib">
    <system:Double x:Key="DropDownButtonWidth">20</system:Double>
    <system:Double x:Key="DropDownButtonHeigth">20</system:Double>
    <system:Double x:Key="DropDownButtonPathWidth">12</system:Double>
    <system:Double x:Key="DropDownButtonPathHeigth">12</system:Double>
    <!--  DropDown Button  -->
    <Style x:Key="DropDownButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource TransparentBackground}" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:HEDatePicker}, Path=Foreground}" />
        <Setter Property="Width" Value="{DynamicResource DropDownButtonWidth}" />
        <Setter Property="Height" Value="{DynamicResource DropDownButtonHeigth}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="BackBorder" CornerRadius="2">
                        <Border.Background>
                            <SolidColorBrush Opacity="0" Color="{Binding RelativeSource={RelativeSource AncestorType=controls:HEDatePicker}, Path=DropDownButtonMouseOverColor}" />
                        </Border.Background>
                        <Path Width="{DynamicResource DropDownButtonPathWidth}" Height="{DynamicResource DropDownButtonPathHeigth}" Data="{DynamicResource DatePath}" Fill="{TemplateBinding Foreground}" Stretch="Fill" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BackBorder" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Opacity)" To="0.7" Duration="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BackBorder" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Opacity)" To="0" Duration="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BackBorder" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Opacity)" To="0.9" Duration="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BackBorder" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Opacity)" To="0" Duration="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  DatePickeTextBox  -->
    <Style x:Key="DatePickerTextBoxStyle" TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="Background" Value="{DynamicResource TransparentBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TransparentBackground}" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:HEDatePicker}, Path=Foreground}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource PrimaryPressed}" />
        <Setter Property="FontSize" Value="{DynamicResource HEUIFontSize}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                    <Border Margin="{TemplateBinding Margin}">
                        <Decorator x:Name="PART_ContentHost" Margin="{TemplateBinding Padding}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  DatePicker  -->
    <Style x:Key="HEDatePickerStyle" TargetType="{x:Type controls:HEDatePicker}">
        <Setter Property="Background" Value="{DynamicResource DarkBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource DarkBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
        <Setter Property="DropDownButtonMouseOverColor" Value="{DynamicResource DarkMouseOverColor}" />
        <Setter Property="IsTodayHighlighted" Value="True" />
        <Setter Property="SelectedDateFormat" Value="Short" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CalendarStyle" Value="{DynamicResource HEDefaultCalendarStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:HEDatePicker}">
                    <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <Border x:Name="BackBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" IsHitTestVisible="True" SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>

                                <DatePickerTextBox x:Name="PART_TextBox" Grid.Row="0" Grid.ColumnSpan="2" Margin="0,2" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Focusable="{TemplateBinding Focusable}" Foreground="{TemplateBinding Foreground}" Style="{StaticResource DatePickerTextBoxStyle}" />
                                <Button x:Name="PART_Button" Grid.Row="0" Grid.Column="1" Margin="3,0,3,0" HorizontalAlignment="Center" VerticalAlignment="Top" Focusable="False" Foreground="{TemplateBinding Foreground}" Style="{StaticResource DropDownButtonStyle}" />
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_Button}" StaysOpen="False" />
                            </Grid>
                        </Border>
                        <Border x:Name="PART_ThicknessBorder" Background="{DynamicResource TransparentBackground}" BorderBrush="{DynamicResource LightBackground}" BorderThickness="0,0,0,1" CornerRadius="{DynamicResource TextBoxBorderCorner}" IsHitTestVisible="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="PART_ThicknessBorder" Property="BorderBrush" Value="{DynamicResource PrimaryBackground}" />
                            <Setter TargetName="PART_ThicknessBorder" Property="BorderThickness" Value="0,0,0,2" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="PART_ThicknessBorder" Property="BorderBrush" Value="{DynamicResource PrimaryBackground}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="PART_ThicknessBorder" Property="BorderBrush" Value="{DynamicResource PrimaryBackground}" />
                            <Setter TargetName="PART_ThicknessBorder" Property="BorderThickness" Value="0,0,0,2" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="ThemeType" Value="Light" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="PART_ThicknessBorder" Property="BorderBrush" Value="{DynamicResource DarkBackground}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.56" />
            </Trigger>
            <Trigger Property="ThemeType" Value="Dark">
                <Setter Property="Background" Value="{DynamicResource DarkBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource DarkBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                <Setter Property="DropDownButtonMouseOverColor" Value="{DynamicResource DarkMouseOverColor}" />
            </Trigger>
            <Trigger Property="ThemeType" Value="Light">
                <Setter Property="Background" Value="{DynamicResource LightBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource LightBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                <Setter Property="DropDownButtonMouseOverColor" Value="{DynamicResource LightMouseOverColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource HEDatePickerStyle}" TargetType="{x:Type controls:HEDatePicker}" />
</ResourceDictionary>