<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:commands="clr-namespace:HEFrame.Styles.Commands" xmlns:controls="clr-namespace:HEFrame.Styles.Controls">

    <!--  ExpanderMenu RadioButton  -->
    <Style x:Key="HEExpanderMenuRatioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="MinHeight" Value="35" />
        <Setter Property="MinWidth" Value="150" />
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=controls:HEExpanderMenu}, Path=Background}" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=controls:HEExpanderMenu}, Path=Foreground}" />
        <Setter Property="FontSize" Value="{DynamicResource HEUINormalFontSize}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Border x:Name="BackBorder" Background="{TemplateBinding Background}" BorderThickness="0" CornerRadius="0" />
                        <Border x:Name="MouseOverBorder" BorderBrush="{Binding RelativeSource={RelativeSource AncestorType=controls:HEExpanderMenu}, Path=SelectedBrush}" BorderThickness="1" Opacity="0" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverBorder" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="BackBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=controls:HEExpanderMenu}, Path=SelectedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HEExpanderMenuStyle" TargetType="{x:Type controls:HEExpanderMenu}">
        <Setter Property="MinWidth" Value="150" />
        <Setter Property="Background" Value="{DynamicResource DarkBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
        <Setter Property="SelectedBrush" Value="{DynamicResource PrimaryBackground}" />
        <Setter Property="FontSize" Value="{DynamicResource HEUINormalFontSize}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SplitLineColor" Value="{DynamicResource LightColor}" />
        <Setter Property="FontSize" Value="{DynamicResource HEUIFontSize}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:HEExpanderMenu}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="40" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Border x:Name="BackBorder" Grid.Row="0" Background="{TemplateBinding Background}" BorderThickness="0" CornerRadius="0" />
                        <ToggleButton Grid.Row="0" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" OverridesDefaultStyle="True" Template="{DynamicResource ExpanderToggleButtonStyle}" />
                        <ContentPresenter Grid.Row="0" Margin="10" HorizontalAlignment="Left" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" />

                        <Border x:Name="ContentBorder" Grid.Row="1" Background="{TemplateBinding Background}" BorderThickness="0,1,0,0" CornerRadius="0" Opacity="1" Visibility="Collapsed">
                            <Border.BorderBrush>
                                <SolidColorBrush Opacity="0.75" Color="{Binding RelativeSource={RelativeSource AncestorType=controls:HEExpander}, Path=SplitLineColor}" />
                            </Border.BorderBrush>
                            <Border.RenderTransform>
                                <ScaleTransform ScaleY="0" />
                            </Border.RenderTransform>
                            <ContentControl Margin="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ItemsControl x:Name="PART_MenuItemsContent">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <RadioButton x:Name="PART_ItemButton" Command="commands:HECommands.ExpanderMenuItemSwitchCommand" CommandParameter="{Binding}" GroupName="MenuGroup" Style="{DynamicResource HEExpanderMenuRatioButtonStyle}" />
                                                <TextBlock Margin="20,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding}" />
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ContentControl>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentBorder" Property="Visibility" Value="Visible" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="0:0:0.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ThemeType" Value="Dark">
                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                <Setter Property="Background" Value="{DynamicResource DarkBackground}" />
                <Setter Property="SplitLineColor" Value="{DynamicResource LightColor}" />
            </Trigger>
            <Trigger Property="ThemeType" Value="Light">
                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                <Setter Property="Background" Value="{DynamicResource LightBackground}" />
                <Setter Property="SplitLineColor" Value="{DynamicResource DarkMouseOverColor}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.56" />
            </Trigger>
        </Style.Triggers>

    </Style>
    <Style BasedOn="{StaticResource HEExpanderMenuStyle}" TargetType="{x:Type controls:HEExpanderMenu}" />
</ResourceDictionary>