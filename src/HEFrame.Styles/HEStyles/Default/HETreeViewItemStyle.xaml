<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:controls="clr-namespace:HEFrame.Styles.Controls">

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=controls:HETreeViewItem}, Path=Foreground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Width="14" Height="10" Background="Transparent">
                        <Path x:Name="ExpandPath" Data="{DynamicResource ArrowPath}" Fill="{Binding RelativeSource={RelativeSource AncestorType=controls:HETreeViewItem}, Path=ArrowBrush}" RenderTransformOrigin="0.5 0.5" Stretch="Fill" Stroke="{Binding RelativeSource={RelativeSource AncestorType=controls:HETreeViewItem}, Path=ArrowBrush}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="-90" />
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpandPath" Storyboard.TargetProperty="RenderTransform.Angle" To="0" Duration="0:0:0.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpandPath" Storyboard.TargetProperty="RenderTransform.Angle" To="-90" Duration="0:0:0.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HETreeViewItemStyle" TargetType="{x:Type controls:HETreeViewItem}">
        <Setter Property="Background" Value="{DynamicResource TransparentBackground}" />
        <Setter Property="ArrowBrush" Value="{DynamicResource DarkContrast}" />
        <Setter Property="SelectedBrush" Value="{DynamicResource PrimaryBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="1,0,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
        <Setter Property="FontSize" Value="{DynamicResource HEUINormalFontSize}" />
        <Setter Property="FontSize" Value="{DynamicResource HEUIFontSize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:HETreeViewItem}">
                    <Grid Margin="0,3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="19" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Border x:Name="Bd" Grid.Row="0" Grid.ColumnSpan="3" MinHeight="16" Background="{DynamicResource TransparentBackground}" BorderBrush="{DynamicResource TransparentBackground}" BorderThickness="0" CornerRadius="2">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="16" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="Expander" Margin="5,0" VerticalAlignment="Center" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}" />
                                <ContentPresenter x:Name="PART_Header" Grid.Column="1" Margin="0,2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" ContentSource="Header" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=controls:HETreeViewItem}, Path=SelectedBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource TransparentBackground}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType=controls:HETreeViewItem}, Path=SelectedBrush}" />
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.56" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ThemeType" Value="Light">
                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
            </Trigger>
            <Trigger Property="ThemeType" Value="Dark">
                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource HETreeViewItemStyle}" TargetType="{x:Type controls:HETreeViewItem}" />
</ResourceDictionary>